name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build-mac:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download FFmpeg for macOS
      run: |
        # Download FFmpeg for macOS
        curl -L https://evermeet.cx/ffmpeg/getrelease/zip -o ffmpeg.zip
        unzip ffmpeg.zip
        chmod +x ffmpeg
        chmod +x ffprobe
        
        # Verify FFmpeg installation
        ./ffmpeg -version
        ./ffprobe -version
        
    - name: Build macOS app
      run: npm run build-mac
      env:
        ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true
        
    - name: Upload macOS build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: MediaSpooferPro-macOS
        path: dist/
        
  build-win:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download FFmpeg for Windows
      run: |
        # Download FFmpeg for Windows
        $ffmpegUrl = "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip"
        $ffmpegZip = "ffmpeg-win.zip"
        
        Invoke-WebRequest -Uri $ffmpegUrl -OutFile $ffmpegZip
        Expand-Archive -Path $ffmpegZip -DestinationPath "ffmpeg-temp" -Force
        
        # Copy FFmpeg binaries to app directory
        Copy-Item "ffmpeg-temp\ffmpeg-master-latest-win64-gpl\bin\ffmpeg.exe" "ffmpeg.exe"
        Copy-Item "ffmpeg-temp\ffmpeg-master-latest-win64-gpl\bin\ffprobe.exe" "ffprobe.exe"
        
        # Verify FFmpeg installation
        .\ffmpeg.exe -version
        .\ffprobe.exe -version
        
    - name: Build Windows app
      run: npm run build-win
      env:
        ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true
        
    - name: Upload Windows build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: MediaSpooferPro-Windows
        path: dist/
        
  release:
    needs: [build-mac, build-win]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create release assets
      run: |
        mkdir -p release-assets
        mv MediaSpooferPro-macOS/* release-assets/ || true
        mv MediaSpooferPro-Windows/* release-assets/ || true
        
    - name: Upload to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./release-assets/
        asset_name: MediaSpooferPro-${{ github.event.release.tag_name }}
        asset_content_type: application/zip 